[{"/Users/Cristina/Desktop/listMe/client/src/index.js":"1","/Users/Cristina/Desktop/listMe/client/src/App.js":"2","/Users/Cristina/Desktop/listMe/client/src/reportWebVitals.js":"3","/Users/Cristina/Desktop/listMe/client/src/components/Register.js":"4","/Users/Cristina/Desktop/listMe/client/src/components/BaseLayout.js":"5","/Users/Cristina/Desktop/listMe/client/src/components/Heading.js":"6","/Users/Cristina/Desktop/listMe/client/src/components/Footing.js":"7","/Users/Cristina/Desktop/listMe/client/src/components/Login.js":"8","/Users/Cristina/Desktop/listMe/client/src/utils/authenticate.js":"9","/Users/Cristina/Desktop/listMe/client/src/components/Explore.js":"10","/Users/Cristina/Desktop/listMe/client/src/components/HowItWorks.js":"11","/Users/Cristina/Desktop/listMe/client/src/components/CreateList.js":"12","/Users/Cristina/Desktop/listMe/client/src/store/reducer.js":"13","/Users/Cristina/Desktop/listMe/client/src/components/ViewList.js":"14"},{"size":1583,"mtime":1617732480791,"results":"15","hashOfConfig":"16"},{"size":944,"mtime":1617125965302,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612570023189,"results":"18","hashOfConfig":"16"},{"size":2674,"mtime":1617223079009,"results":"19","hashOfConfig":"16"},{"size":343,"mtime":1615848168806,"results":"20","hashOfConfig":"16"},{"size":1972,"mtime":1617828403641,"results":"21","hashOfConfig":"16"},{"size":197,"mtime":1615845632381,"results":"22","hashOfConfig":"16"},{"size":3694,"mtime":1617230250627,"results":"23","hashOfConfig":"16"},{"size":708,"mtime":1614886090811,"results":"24","hashOfConfig":"16"},{"size":284,"mtime":1617734303674,"results":"25","hashOfConfig":"16"},{"size":492,"mtime":1617129955283,"results":"26","hashOfConfig":"16"},{"size":2250,"mtime":1617734723232,"results":"27","hashOfConfig":"16"},{"size":784,"mtime":1617827552068,"results":"28","hashOfConfig":"16"},{"size":4408,"mtime":1617910776824,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1yykdsh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Cristina/Desktop/listMe/client/src/index.js",[],["62","63"],"/Users/Cristina/Desktop/listMe/client/src/App.js",[],"/Users/Cristina/Desktop/listMe/client/src/reportWebVitals.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/Register.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/BaseLayout.js",["64"],"\nimport React from \"react\";\nimport Footer from \"./Footing\";\nimport Heading from \"./Heading\";\nimport { Box } from 'grommet'\nimport '../styles/BaseLayout.css'\n\nfunction BaseLayout(props) {\n  return (\n      <div>\n          <Heading></Heading>\n          {props.children}\n          <Footer></Footer>\n      </div>\n  );\n}\n\nexport default BaseLayout;\n","/Users/Cristina/Desktop/listMe/client/src/components/Heading.js",["65"],"import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/heading.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { defaultProps } from \"grommet\";\n\nfunction Heading(props) {\n  // will remove token from localStorage to logout user from the site\n  const handleLogout = () => {\n    localStorage.removeItem(\"jsonwebtoken\");\n    props.onLogout()\n  };\n  return (\n    <div className=\"header-buttons\">\n      <div className=\"button-div\">\n        <NavLink to=\"/\">\n          <Button className=\"button\" variant=\"light\" size=\"lg\">\n            Home\n          </Button>\n        </NavLink>\n\n        {/* if not authenticated/logged in, give them option to login */}\n        {!props.isAuth ? (\n          <NavLink to=\"/login/user\">\n            <Button variant=\"light\" className=\"button\" size=\"lg\">\n              Login\n            </Button>\n          </NavLink>\n        ) : null}\n\n        {/* if authenticated,show profile */}\n        {props.isAuth ? (\n          <NavLink to=\"/mylists\">\n            <Button className=\"button\" variant=\"light\" size=\"lg\">\n              My Lists\n            </Button>\n          </NavLink>\n        ) : null}\n\n        {/* if authenticated/logged in, give option to logout */}\n        {props.isAuth ? (\n          <NavLink to=\"/\">\n            <Button\n              className=\"button\"\n              variant=\"light\"\n              size=\"lg\"\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </NavLink>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\n// need to access global state to hide tabs depending on user authentication\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.isAuthenticated\n  }\n}\n\n\n//need to update global state\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch({ type: \"ON_LOGOUT\" }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Heading);\n","/Users/Cristina/Desktop/listMe/client/src/components/Footing.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/Login.js",["66"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { setAuthenticationHeaders } from \"../utils/authenticate\";\n// need to create login to login ppl -- get the logic from GoodTutor\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../styles/Login.css\";\nimport { connect } from \"react-redux\";\n\nfunction Login(props) {\n  // create state to save loginCredentials of user\n  const [loginCredentials, setLoginCredentials] = useState({\n    email: '',\n    password: ''\n  }); // empty object 1st\n\n  //state for errors\n  const [error, setError] = useState(false); // setting error to false at first\n  // create function to handle change in input boxes\n  // attempt to make a function within a function\n  const handleChange = (e) => {\n    setLoginCredentials({\n      ...loginCredentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // also need JSON web token when the login has been successful\n  // if Login is successful, will have a token returned as result\n  const userLoggedIn = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/login/user\", {\n        email: loginCredentials.email,\n        password: loginCredentials.password,\n      });\n      const result = response.data;\n      console.log(result);\n      return result; // result is the token created and sent from the backend\n    } catch (err) {\n      return null;\n    }\n  };\n\n  // create a function that calls the above function when Sign In button is clicked\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    let userToken = await userLoggedIn(); // userToken will be in the form of an object\n\n    if (userToken) {\n      const token = userToken.token; // accessing token from the userToken object\n\n      localStorage.setItem(\"jsonwebtoken\", token); // setting the token in the localstorage as 'jsonwebtoken'\n\n      // after getting the token, we can set default authentication headers for axios to include jsonwebtoken\n      // Will send the token for every request user makes -- need to make this middleware in utils folder\n      setAuthenticationHeaders(token);\n\n      if (token) {\n        props.onAuthenticated()\n        props.history.push(\"/\");\n      } else {\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  // need input boxes (onChange={handleChange}) for email and password\n  // need a button (onClick={handleChange})\n  return (\n    <div className=\"login-div\">\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n            name=\"email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n            name=\"password\"\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type='submit' onClick={handleLogin}>\n          Submit\n        </Button>\n      </Form>\n      <p>\n        Don't have an account? <NavLink to=\"/register/user\">Sign Up!</NavLink>{\" \"}\n      </p>\n    </div>\n  );\n}\n\n// update the global state with mapDispatchToProps\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: () => dispatch({type: 'ON_AUTH'})\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n","/Users/Cristina/Desktop/listMe/client/src/utils/authenticate.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/Explore.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/HowItWorks.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/CreateList.js",[],"/Users/Cristina/Desktop/listMe/client/src/store/reducer.js",[],"/Users/Cristina/Desktop/listMe/client/src/components/ViewList.js",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":86,"column":6,"nodeType":"80","endLine":86,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'defaultProps' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchItems' and 'fetchListDetails'. Either include them or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [fetchItems, fetchListDetails]",{"range":"87","text":"88"},[2277,2279],"[fetchItems, fetchListDetails]"]